
#-------------Jenkins ServiceAccount 授权jenkins访问集群的账号--------------#
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: jenkins
  name: jenkins-admin
  namespace: kube-system
---
#-------------Jenkins ClusterRoleBinding 授权jenkins访问集群的账号角色和权限--------------#
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: jenkins-admin
  labels:
    k8s-app: jenkins
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: jenkins-admin
  namespace: kube-system
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  labels:
    k8s-app: jenkins
  name: jenkins
rules:
- apiGroups: ["", "extensions", "apps"]
  resources:
    - nodes
    - nodes/proxy
    - endpoints
    - secrets
    - pods
    - deployments
    - services
  verbs: ["get", "list", "watch"]
---
#-------------Jenkins Deployment 部署jenkins配置--------------#
kind: Deployment
apiVersion: apps/v1beta2
metadata:
  name: jenkins
  namespace: kube-system
  labels:
    k8s-app: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: jenkins
  template:
    metadata:
      labels:
        k8s-app: jenkins
    spec:
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      nodeSelector:  
        node-role.kubernetes.io/master: ""
      containers:
      - name: jenkins
        image: dengyc/jenkins
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        - containerPort: 50000
        volumeMounts:
        - name: jenkinshome
          mountPath: /var/jenkins_home
        - name: usrdocker
          mountPath: /usr/bin/docker      
        - name: dockersock
          mountPath: /var/run/docker.sock   
      volumes:
      - name: jenkinshome
        #hostPath:
        #  path: "/tmp/jenkins_home"
        awsElasticBlockStore:
          volumeID: vol-09bb49cfb14a38ced
          fsType: ext4
      - name: usrdocker
        hostPath:
          path: "/run/torcx/bin/docker"      
      - name: dockersock
        hostPath:
          path: "/var/run/docker.sock"
      serviceAccount: "jenkins-admin"

---
#-------------Jenkins Service 部署jenkins服务--------------#

kind: Service
apiVersion: v1
metadata:
  labels:
    k8s-app: jenkins
  name: jenkins
  namespace: kube-system
  annotations:
    prometheus.io/scrape: 'true'
spec:
  ports:
    - port: 8080
      name: jenkins
      targetPort: 8080
    - port: 50000
      name: jenkins-agent
      targetPort: 50000
  type: NodePort
  selector:
    k8s-app: jenkins

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: jenkins-ingress
  namespace: kube-system
  annotations:
    alb.ingress.kubernetes.io/scheme: internal
spec:
  rules:
  - host: ci.hicoin.io	
    http:
      paths:
      - path: /
        backend:
          serviceName: jenkins
          servicePort: jenkins

